{"version":3,"file":"static/js/705.3d973c27.chunk.js","mappings":"oOASA,EAPe,WACb,OACE,+BACE,mBAAQA,KAAK,SAASC,UAAU,SAAhC,qBAGL,E,SCoCD,EA3CkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEjBC,EAMED,EANFC,eACAC,EAKEF,EALFE,YACAC,EAIEH,EAJFG,OACAC,EAGEJ,EAHFI,SACAC,EAEEL,EAFFK,aACAC,EACEN,EADFM,aAIF,OACE,iBAAKP,UAAU,iBAAf,WACE,0BACE,gBAAKQ,IAAG,UALE,mCAKF,OAAeL,GAAeM,IAAKP,OAG7C,iBAAKF,UAAU,UAAf,WACE,wBAAKE,KAEL,0BACE,iBAAMF,UAAU,OAAhB,uBADF,IAC2CK,MAE3C,0BACE,iBAAML,UAAU,OAAhB,qBADF,IACyCM,EADzC,YAGA,0BACE,iBAAMN,UAAU,OAAhB,2BADF,IAC+C,KAAOO,MAGtD,iBAAMP,UAAU,OAAhB,qBAECI,EACGA,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACT,cAAeZ,UAAU,aAAzB,SACGW,EAAME,KAAO,KADRD,EADC,IAKX,+BAIX,E,4CCWD,EA7CqB,WAAO,IAAD,IACzB,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAgB7C,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8FAEIP,GAAa,GAFjB,KAGIF,EAHJ,UAG0BU,EAAAA,EAAAA,IAAgBC,OAAOR,IAHjD,kFAKIS,EAAAA,GAAAA,MAAY,qBALhB,yBAOIV,GAAa,GAPjB,6EADc,uBAAC,WAAD,wBAWdW,EACD,GAAE,CAACV,IAGCJ,GAIH,0BACE,iCACE,SAAC,KAAD,CAAMe,GAAIT,EAAV,UACE,SAAC,EAAD,MAEDJ,IAAa,SAACc,EAAA,EAAD,KACd,SAAC,EAAD,CAAW9B,KAAMc,KAEjB,SAAC,KAAD,CAAMe,GAAG,OAAT,UACE,mBAAQ9B,UAAU,SAAlB,qBAGF,SAAC,KAAD,CAAM8B,GAAG,UAAT,UACE,mBAAQ9B,UAAU,SAAlB,wBAEF,SAAC,KAAD,SAlBG,IAsBV,C","sources":["components/GoBack/GoBack.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import '../ButtonStyle/Button.style.css'\n\nconst GoBack = () => {\n  return (\n    <>\n      <button type=\"button\" className='button'>GoBack</button>\n    </>\n  );\n};\nexport default GoBack;\n","import './MovieCard.style.css';\nconst MovieCard = ({ info }) => {\n  const {\n    original_title,\n    poster_path,\n    genres,\n    overview,\n    vote_average,\n    release_date,\n  } = info;\n  const baseURL = 'https://image.tmdb.org/t/p/w300';\n\n  return (\n    <div className=\"card_container\">\n      <div>\n        <img src={`${baseURL}${poster_path}`} alt={original_title} />\n      </div>\n\n      <div className=\"details\">\n        <h1>{original_title}</h1>\n\n        <p>\n          <span className=\"text\">Overvie: </span> {overview}\n        </p>\n        <p>\n          <span className=\"text\">Points:</span> {vote_average} / 10\n        </p>\n        <p>\n          <span className=\"text\">Release date:</span> {'  ' + release_date}\n        </p>\n\n        <span className=\"text\"> Genre:</span>\n\n        {genres\n          ? genres.map((genre, index) => (\n              <p key={index} className=\"genre_item\">\n                {genre.name + ','}\n              </p>\n            ))\n          : 'Genres is not available'}\n      </div>\n    </div>\n  );\n};\nexport default MovieCard;\n","import GoBack from 'components/GoBack/GoBack';\nimport Loader from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { useEffect, useState } from 'react';\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\nimport { getMovieDetails } from 'servises/api';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  useEffect(() => {\n    async function fetchDetails() {\n      try {\n        setIsLoading(true);\n        setMovieDetails(await getMovieDetails(Number(movieId)));\n      } catch (error) {\n        toast.error('we have a problem');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchDetails();\n  }, [movieId]);\n  // console.log(location);\n\n  if (!movieDetails) {\n    return null;\n  }\n  return (\n    <div>\n      <>\n        <Link to={backLinkHref}>\n          <GoBack />\n        </Link>\n        {isLoading && <Loader />}\n        <MovieCard info={movieDetails} />\n\n        <Link to=\"cast\">\n          <button className=\"button\">Cast</button>\n        </Link>\n\n        <Link to=\"reviews\">\n          <button className=\"button\">Reviews</button>\n        </Link>\n        <Outlet />\n      </>\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["type","className","info","original_title","poster_path","genres","overview","vote_average","release_date","src","alt","map","genre","index","name","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","getMovieDetails","Number","toast","fetchDetails","to","Loader"],"sourceRoot":""}